{"title":"Shell脚本","uid":"4c7aeff5501d897794d9e23b1c1097ec","slug":"Linux/shell脚本","date":"2022-11-25T03:03:04.000Z","updated":"2022-12-02T07:43:54.386Z","comments":true,"path":"api/articles/Linux/shell脚本.json","keywords":null,"cover":"/img/default_top_img.jpg","content":"<h1 id=\"Shell\"><a href=\"#Shell\" class=\"headerlink\" title=\"Shell\"></a>Shell</h1><h2 id=\"输入输出重定向\"><a href=\"#输入输出重定向\" class=\"headerlink\" title=\"输入输出重定向\"></a>输入输出重定向</h2><blockquote>\n<p>我们在后台挂在jar包时，常使用过一个命令：<code>nohup java -jar xxx.jar &gt; java.log 2&gt;&amp;1 &amp;</code></p>\n<p>这里就有几个知识点：</p>\n<ol>\n<li>末尾的 <code>&amp;</code> 代表后台默认启动，页面关闭后，程序终止。</li>\n<li>头部的 <code>nohup</code> 表示页面关闭后，后台仍继续运行，如果没有指定日志文件，则默认将输出重定向到<code>nohup.log</code>文件</li>\n<li><code>java -jar xxx.jar</code>最基本的启动jar包</li>\n<li><code>&gt; java.log</code> 将运行jar包后的输出日志文件重定向到 <code>java.log</code>文件中</li>\n<li><code>2&gt;&amp;1</code>将标准输出与标准错误输出合并，在当前语义下就是将所有信息输出到 <code>java.log</code>文件。<ol>\n<li>如果只写 <code>&gt;</code> 表示只将正常输出重定向到log文件中，错误信息直接显示页面</li>\n<li>如果写 <code>2&gt;</code> 表示只将错误输出重定向到log文件中，正常信息直接显示页面</li>\n</ol>\n</li>\n<li><code>&gt;</code> 默认表示重定向，并覆盖原来内容</li>\n<li><code>&gt;&gt;</code> 表示以追加的方式重定向</li>\n</ol>\n</blockquote>\n<p>这样我们就可以监控到后台运行程序的日志信息了。</p>\n<h2 id=\"shell脚本保证程序运行\"><a href=\"#shell脚本保证程序运行\" class=\"headerlink\" title=\"shell脚本保证程序运行\"></a>shell脚本保证程序运行</h2><blockquote>\n<p><strong>需求</strong>：当我们将项目挂在到服务器中，可能过一会儿服务就挂机了，我们可能还不知道请求，就需要一个脚本定时的去监控，程序是否仍在运行中。</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">lsof -i:8080</span><br><span class=\"line\">renren=$?</span><br><span class=\"line\">lsof -i:82</span><br><span class=\"line\">getaway=$?</span><br><span class=\"line\">lsof -i:9001</span><br><span class=\"line\">manager=$?</span><br><span class=\"line\">lsof -i:8001</span><br><span class=\"line\">back=$?</span><br><span class=\"line\"><span class=\"comment\">#echo &quot;&#x27;renren:&#x27;, $&#123;renren&#125;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#echo &quot;&#x27;getaway:&#x27;,$&#123;getaway&#125;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#echo &quot;&#x27;manager:&#x27;,$&#123;manager&#125;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#echo &quot;&#x27;back:&#x27;,$&#123;back&#125;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 判断项目文件都是否都正产运转，如果没有运转，则进行记录日志，并重新启动服务</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$&#123;back&#125;</span> != 0 ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">cd</span> /project/qiyuan/dist</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(date +%F%n%T)</span>, server restart&quot;</span> &gt;&gt; renre.log</span><br><span class=\"line\">        <span class=\"built_in\">nohup</span> node server.js &gt;&gt; renre.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$&#123;renren&#125;</span> != 0 ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">cd</span> /project/qiyuan/java</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(date +%F%n%T)</span>, server restart&quot;</span> &gt;&gt; renren.log</span><br><span class=\"line\">        <span class=\"built_in\">nohup</span> java -jar renren-fast.jar &gt;&gt; renren.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$&#123;getaway&#125;</span> != 0 ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">cd</span> /project/qiyuan/java</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(date +%F%n%T)</span>, server restart&quot;</span> &gt;&gt; getaway.log</span><br><span class=\"line\">        <span class=\"built_in\">nohup</span> java -jar getaway-0.0.1-SNAPSHOT.jar &gt;&gt; getaway.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$&#123;manager&#125;</span> != 0 ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">cd</span> /project/qiyuan/java</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(date +%F%n%T)</span>,node server restart&quot;</span> &gt;&gt; manager.log</span><br><span class=\"line\">        <span class=\"built_in\">nohup</span> java -jar manager-0.0.1-SNAPSHOT.jar &gt;&gt; manager.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n","text":"Shell输入输出重定向 我们在后台挂在jar包时，常使用过一个命令：nohup java -jar xxx.jar &gt; java.log 2&gt;&amp;1 &amp; 这里就有几个知识点： 末尾的 &amp; 代表后台默认启动，页面关闭后，程序终止。 头部的 noh...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"Shell","slug":"Shell","count":1,"path":"api/tags/Shell.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Shell\"><span class=\"toc-text\">Shell</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91\"><span class=\"toc-text\">输入输出重定向</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#shell%E8%84%9A%E6%9C%AC%E4%BF%9D%E8%AF%81%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">shell脚本保证程序运行</span></a></li></ol></li></ol>","author":{"name":"秦思成","slug":"blog-author","avatar":"https://tva2.sinaimg.cn/large/9bd9b167ly1fzjxy660fij20b40b43yi.jpg","link":"/","description":"我的个人知识库","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"第三章：二叉树问题","uid":"ef3a6aac56d074894be545c71d6959e7","slug":"数据结构/第三章：二叉树问题","date":"2022-11-25T05:03:04.000Z","updated":"2022-12-01T02:13:16.426Z","comments":true,"path":"api/articles/数据结构/第三章：二叉树问题.json","keywords":null,"cover":"/img/default_top_img.jpg","text":"树形dp套路在做树结构的题目中，如果求解规则可以分为，以某个节点为子树，先向左要数据，再向右要数据，最后返回总数据，我们就可以使用该套路。 递归进行遍历 1234567891011public static void QTraverse2(Point tree) &#123; i...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":3,"path":"api/categories/数据结构.json"}],"tags":[{"name":"二叉树","slug":"二叉树","count":1,"path":"api/tags/二叉树.json"}],"author":{"name":"秦思成","slug":"blog-author","avatar":"https://tva2.sinaimg.cn/large/9bd9b167ly1fzjxy660fij20b40b43yi.jpg","link":"/","description":"我的个人知识库","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"IO流","uid":"eab0435802cc6e95f43c834dccfaf907","slug":"Java/IO流","date":"2022-11-24T05:03:04.000Z","updated":"2022-12-02T07:43:54.349Z","comments":true,"path":"api/articles/Java/IO流.json","keywords":null,"cover":"/img/default_top_img.jpg","text":"今天面试的时候问了一道IO流的题，鉴于之前在java基础篇的时候学过一遍，后再无使用和复习，就再跟着韩顺平老师的课件复习一遍。 IO流IO流是什么？当我们使用程序读取或修改本地文件时， 文件是以流的形式加载在内存中的。 InputStream:输入流，从数据源加载至内存。 Out...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"Java","slug":"Java","count":2,"path":"api/categories/Java.json"}],"tags":[{"name":"IO流","slug":"IO流","count":1,"path":"api/tags/IO流.json"}],"author":{"name":"秦思成","slug":"blog-author","avatar":"https://tva2.sinaimg.cn/large/9bd9b167ly1fzjxy660fij20b40b43yi.jpg","link":"/","description":"我的个人知识库","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}