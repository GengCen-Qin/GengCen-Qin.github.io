{"title":"从 JDBC 到 ORM（例：Mybatis）的演化过程","uid":"bf110c25b189686e7bf0f2a9ddd106cd","slug":"数据库/从 JDBC 到 ORM（例：Mybatis）的演化过程","date":"2022-11-29T11:03:04.000Z","updated":"2022-11-29T11:45:34.570Z","comments":true,"path":"api/articles/数据库/从 JDBC 到 ORM（例：Mybatis）的演化过程.json","keywords":null,"cover":"/img/default_top_img.jpg","content":"<h1 id=\"从-JDBC-到-ORM（例：Mybatis）的演化过程\"><a href=\"#从-JDBC-到-ORM（例：Mybatis）的演化过程\" class=\"headerlink\" title=\"从 JDBC 到 ORM（例：Mybatis）的演化过程\"></a>从 JDBC 到 ORM（例：Mybatis）的演化过程</h1><p>​    下面我将介绍Java操作Mysql数据的方式的演化过程，从最基本的JDBC到ORM框架的实现，每一次演化都是为了解决现有存在的问题。</p>\n<h2 id=\"JDBC\"><a href=\"#JDBC\" class=\"headerlink\" title=\"JDBC\"></a>JDBC</h2><p>这里需要加入Mysql驱动包或者依赖.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.13<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 注册驱动</span></span><br><span class=\"line\">    <span class=\"type\">Driver</span> <span class=\"variable\">driver</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">com</span>.mysql.jdbc.Driver();</span><br><span class=\"line\">    <span class=\"comment\">// 设置配置</span></span><br><span class=\"line\">    <span class=\"type\">Properties</span> <span class=\"variable\">properties</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">    properties.setProperty(<span class=\"string\">&quot;user&quot;</span>,<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">    properties.setProperty(<span class=\"string\">&quot;password&quot;</span>,<span class=\"string\">&quot;123456&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/orm&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 获取连接</span></span><br><span class=\"line\">    <span class=\"type\">Connection</span> <span class=\"variable\">connect</span> <span class=\"operator\">=</span> driver.connect(url, properties);</span><br><span class=\"line\">    <span class=\"comment\">// 执行SQL</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from user&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> connect.createStatement();</span><br><span class=\"line\">    <span class=\"comment\">// 返回结果</span></span><br><span class=\"line\">    <span class=\"type\">ResultSet</span> <span class=\"variable\">resultSet</span> <span class=\"operator\">=</span> statement.executeQuery(sql);</span><br><span class=\"line\">    <span class=\"comment\">// 结束资源</span></span><br><span class=\"line\">    resultSet.close();</span><br><span class=\"line\">    statement.close();</span><br><span class=\"line\">    connect.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>​    可以看到我们是通过<code>Statement</code>去执行的SQL语句，这里是存在SQL注入风险的，简单来说就是SQL是字符串拼接的，如果有恶意参数，会影响整个SQL的意思，所以后面我们使用<code>PreparedStatement </code>，也叫做预处理，执行SQL语句的参数用<code>(?)</code>来表示,使用set方法插入值。好处：1. 防止SQL注入 2. 减少编译次数，效率高 3. 不在使用SQL拼接，减少语法错误。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 注册驱动</span></span><br><span class=\"line\">    <span class=\"type\">Driver</span> <span class=\"variable\">driver</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">com</span>.mysql.jdbc.Driver();</span><br><span class=\"line\">    <span class=\"comment\">// 设置配置</span></span><br><span class=\"line\">    <span class=\"type\">Properties</span> <span class=\"variable\">properties</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">    properties.setProperty(<span class=\"string\">&quot;user&quot;</span>,<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">    properties.setProperty(<span class=\"string\">&quot;password&quot;</span>,<span class=\"string\">&quot;123456&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/orm&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 获取连接</span></span><br><span class=\"line\">    <span class=\"type\">Connection</span> <span class=\"variable\">connect</span> <span class=\"operator\">=</span> driver.connect(url, properties);</span><br><span class=\"line\">    <span class=\"comment\">// 执行SQL</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from user where username =?&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">PreparedStatement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> connect.prepareStatement(sql);</span><br><span class=\"line\">    statement.setString(<span class=\"number\">1</span>,<span class=\"string\">&quot;steak&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 返回结果</span></span><br><span class=\"line\">    <span class=\"type\">ResultSet</span> <span class=\"variable\">resultSet</span> <span class=\"operator\">=</span> statement.executeQuery();</span><br><span class=\"line\">    <span class=\"comment\">// 结束资源</span></span><br><span class=\"line\">    resultSet.close();</span><br><span class=\"line\">    statement.close();</span><br><span class=\"line\">    connect.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"封装JDBC工具类\"><a href=\"#封装JDBC工具类\" class=\"headerlink\" title=\"封装JDBC工具类\"></a>封装JDBC工具类</h2><p>​    上面的操作，其中资源配置都是固定操作，所以我们可以直接写一个工具类来每次获取连接，进行操作，释放资源。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JDBCUtils</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String password;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String url;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String driver;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Properties</span> <span class=\"variable\">properties</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">            <span class=\"comment\">// 将配置写入配置文件，更加灵活</span></span><br><span class=\"line\">            properties.load(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;src\\\\mysql.properties&quot;</span>));</span><br><span class=\"line\">            username = properties.getProperty(<span class=\"string\">&quot;user&quot;</span>);</span><br><span class=\"line\">            password = properties.getProperty(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\">            url = properties.getProperty(<span class=\"string\">&quot;url&quot;</span>);</span><br><span class=\"line\">            driver = properties.getProperty(<span class=\"string\">&quot;driver&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> DriverManager.getConnection(url, username, password);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">(ResultSet set, Statement statement, Connection connection)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (set != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            set.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (statement != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            set.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (connection != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            connection.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用连接池\"><a href=\"#使用连接池\" class=\"headerlink\" title=\"使用连接池\"></a>使用连接池</h2><p>​    在上面我们每次操作数据库时，都是获取连接，操作，断开连接。</p>\n<p>​    传统的JDBC操作会频繁的请求和验证，占用很多系统资源，导致服务崩溃，如果程序出现问题未能正常关闭，将导致数据库内存泄露，组织共导致重启数据库。</p>\n<p>​    而且不能控制连接的数量，如果连接过多，可能导致Mysql崩溃。所以我们引入了连接池，让连接复用。这里我使用德鲁伊连接池，只用引入先关依赖即可：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>druid<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这里我直接把原先的获取连接方式，改为使用连接池获取。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sql.DataSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JDBCUtils</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DataSource dataSource;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Properties</span> <span class=\"variable\">properties</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">            <span class=\"comment\">// 将配置写入配置文件</span></span><br><span class=\"line\">            properties.load(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;src\\\\mysql.properties&quot;</span>));</span><br><span class=\"line\">            dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dataSource.getConnection();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">(ResultSet set, Statement statement, Connection connection)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (set != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            set.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (statement != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            set.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 在数据库连接池技术中，close 不是真的断掉连接，而是把使用的 Connection 对象放回连接池</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (connection != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            connection.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Apache—DBUtils\"><a href=\"#Apache—DBUtils\" class=\"headerlink\" title=\"Apache—DBUtils\"></a>Apache—DBUtils</h2><p>​    上面的操作存在一个问题，关闭connection之后，resultSet结果集无法使用，且resultSet不利于数据的管理，所以每次我们查询了数据，可以手动的添加到List，Map等容器使用。还存在一个问题，每次查询返回的都是ResultSet，能不能通过泛型和反射，直接将数据封装成对象或者到List中。这些操作就被<code>Apache—DBUtils</code>完成了，是Apache提供的开源JDBC工具类库，且内部对SQL执行进行了线程安全保证。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>commons-dbutils<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commons-dbutils<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> JDBCUtils.getConnection();</span><br><span class=\"line\">    <span class=\"type\">QueryRunner</span> <span class=\"variable\">queryRunner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">QueryRunner</span>();</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from user where id &gt;= ?&quot;</span>;</span><br><span class=\"line\">    List&lt;User&gt; list = queryRunner.query(connection, sql, <span class=\"keyword\">new</span> <span class=\"title class_\">BeanListHandler</span>&lt;&gt;(User.class));</span><br><span class=\"line\">    JDBCUtils.close(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, connection);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"DAO与增删改查通用方法-BasicDao\"><a href=\"#DAO与增删改查通用方法-BasicDao\" class=\"headerlink\" title=\"DAO与增删改查通用方法-BasicDao\"></a>DAO与增删改查通用方法-BasicDao</h2><blockquote>\n<p>Dao : data access object 数据访问对象</p>\n</blockquote>\n<p>​    我们希望将增删改查一些公共的方法抽取出来，BasicDao是专门和数据库交互的，在BasicDao的基础上，实现一张表对应一个Dao，更好的完成功能，比如Customer表对应就是CustomerDao。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.dbutils.handlers.ScalarHandler;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BasicDAO</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">QueryRunner</span> <span class=\"variable\">qr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">QueryRunner</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 增删改操作</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">update</span><span class=\"params\">(String sql, Object... parameters)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            connection = JDBCUtils.getConnection();</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">update</span> <span class=\"operator\">=</span> qr.update(connection, sql, parameters);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> update;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e); <span class=\"comment\">//将编译异常-&gt;运行异常 ,抛出</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            JDBCUtils.close(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, connection);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查询并封装多个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;T&gt; <span class=\"title function_\">queryMulti</span><span class=\"params\">(String sql, Class&lt;T&gt; clazz, Object... parameters)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            connection = JDBCUtils.getConnection();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> qr.query(connection, sql, <span class=\"keyword\">new</span> <span class=\"title class_\">BeanListHandler</span>&lt;T&gt;(clazz), parameters);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            JDBCUtils.close(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, connection);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查询并封装单个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">querySingle</span><span class=\"params\">(String sql, Class&lt;T&gt; clazz, Object... parameters)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            connection = JDBCUtils.getConnection();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> qr.query(connection, sql, <span class=\"keyword\">new</span> <span class=\"title class_\">BeanHandler</span>&lt;T&gt;(clazz), parameters);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">            <span class=\"comment\">//将编译异常-&gt;运行异常 ,抛出</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            JDBCUtils.close(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, connection);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查询一个值</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">queryScalar</span><span class=\"params\">(String sql, Object... parameters)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            connection = JDBCUtils.getConnection();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> qr.query(connection, sql, <span class=\"keyword\">new</span> <span class=\"title class_\">ScalarHandler</span>(), parameters);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            JDBCUtils.close(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, connection);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CustomerDao</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BasicDAO</span>&lt;CustomerDao&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 封装自己的方法，并且由于是BasicDao的子类，可直接使用其定义的方法</span></span><br><span class=\"line\"><span class=\"comment\">     * 由于指定了泛型，也可以直接返回封装好的对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ORM\"><a href=\"#ORM\" class=\"headerlink\" title=\"ORM\"></a>ORM</h2><blockquote>\n<p>是什么？</p>\n</blockquote>\n<p>​    对象关系映射（Object Relational Mapping，简称ORM）模式是一种<code>为了解决面向对象与关系数据库存在的互不匹配的现象的技术</code>。简单的说，ORM是通过使用描述对象和数据库之间映射的元数据，将程序中的对象自动持久化到关系数据库中。</p>\n<p>​    也就是说我们能不能不写死SQL，将一个模型类与数据库中一张表做映射关系。我们只面向对象操作，比如<code>save(new User)</code>表示保存User对象到数据库中，一般我们会把User类与数据库中User表进行匹配与映射。这样我们也不用<strong>直接</strong>写SQL了。</p>\n<blockquote>\n<p>ORM的优缺点 </p>\n</blockquote>\n<p>优点：简单，直接，面向对象操作</p>\n<p>缺点：会牺牲程序的执行效率和会固定思维模式。 （用多了，SQL可能都不会写了，而且提供的方法是有限的，但你的需求是无限的，我深有体会，这里感谢鱼皮对我的帮助）。</p>\n<blockquote>\n<p>常见ORM框架</p>\n</blockquote>\n<ol>\n<li>Mybatis 、Mybatis-plus（常用，直接看官方文档操作）</li>\n<li>Hibernate</li>\n</ol>\n<p>​    </p>\n<p>​    上面就是Java对数据库操作的演化过程，各个阶段的代码只做了简单的演示，感兴趣可以再深入学习，我现在是常用Mybatis-plus，但由于傻瓜式操作，我更想了解一下底层，所以在想我们能不能自己写一个简单的ORM，不需要很完善，可以表达思想即可，这里我看了一篇文章写的很棒，下面的代码也是基于该作者的。</p>\n<p>详情链接：<a href=\"https://cloud.tencent.com/developer/article/2057369?from=article.detail.1803564\">https://cloud.tencent.com/developer/article/2057369?from=article.detail.1803564</a></p>\n<p>​    这里我们先声明一点，不管是什么操作，Mysql都是只认SQL，既然现在我们是面向对象操作，不去自己写SQL，那ORM底层就一定会通过某些操作，将我们的对象操作转写为SQL语句，最后执行。底层实际上还是基础的部分，只不过我们套了个壳子，让使用更方便了而已，这里需要的基本知识：<code>注解，反射，JDBC基础</code>。</p>\n<h3 id=\"代码演示\"><a href=\"#代码演示\" class=\"headerlink\" title=\"代码演示\"></a>代码演示</h3><blockquote>\n<p>我们既然要将实体类与数据库表做映射，那我们就应该在类上声明，它对应的哪个表。我们使用@Table 来声明</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Inherited</span></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.TYPE&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"comment\">// 加在类上，标识哪张表</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> Table &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Inherited</span></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.FIELD&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"comment\">// 加在属性上，标识主键</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> PrimaryKey &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>对应的实体类</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// lombok注解，简化代码</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"comment\">// 自定义注解，表示对应的user表</span></span><br><span class=\"line\"><span class=\"meta\">@Table(&quot;user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@PrimaryKey</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String gender;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String address;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>底层还是需要获取连接，这里我们使用Druid连接池</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 注册驱动</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyDataSource</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> DataSource dataSource;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        com.alibaba.druid.pool.<span class=\"type\">DruidDataSource</span> <span class=\"variable\">dataSource</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">com</span>.alibaba.druid.pool.DruidDataSource();</span><br><span class=\"line\">        dataSource.setUrl(<span class=\"string\">&quot;jdbc:mysql://1.14.74.242:3306/orm&quot;</span>);</span><br><span class=\"line\">        dataSource.setUsername(<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">        dataSource.setPassword(<span class=\"string\">&quot;123456&quot;</span>);</span><br><span class=\"line\">        dataSource.setDriverClassName(<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.dataSource = dataSource;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建JdbcTemplate，利用DataSource与数据库直接交互，实现通用方法</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据资源获取连接，执行SQL，结果集</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JdbcTemplate</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">MyDataSource</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> Connection connection;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> PreparedStatement preparedStatement;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> ResultSet resultSet;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//查询</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> &lt;T&gt; List&lt;T&gt; <span class=\"title function_\">executeQuery</span><span class=\"params\">(String sql , RowMapper&lt;T&gt; rowMapper)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        preparedStatement = preparedStatement(sql);</span><br><span class=\"line\">        resultSet = preparedStatement.executeQuery();</span><br><span class=\"line\">        List&lt;T&gt; list = resultSet(resultSet, rowMapper);</span><br><span class=\"line\">        close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//更新</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">int</span> <span class=\"title function_\">executeUpdate</span><span class=\"params\">(String sql)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        preparedStatement = preparedStatement(sql);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> preparedStatement.executeUpdate();</span><br><span class=\"line\">        close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(String sql)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            preparedStatement = preparedStatement(sql);</span><br><span class=\"line\">            preparedStatement.execute();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//close();</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//获取链接</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (connection == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            connection = <span class=\"built_in\">this</span>.dataSource.getConnection();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> connection;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//预执行sql</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> PreparedStatement <span class=\"title function_\">preparedStatement</span><span class=\"params\">(String sql)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        connection = getConnection();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (preparedStatement == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            preparedStatement = connection.prepareStatement(sql);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> preparedStatement;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//结果集</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> &lt;T&gt; List&lt;T&gt; <span class=\"title function_\">resultSet</span><span class=\"params\">(ResultSet resultSet , RowMapper&lt;T&gt; rowMapper)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        List&lt;T&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (resultSet.next())&#123;</span><br><span class=\"line\">            list.add(rowMapper.mapRow(resultSet));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//关闭</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (connection != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                connection.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (preparedStatement != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                preparedStatement.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.resultSet != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.resultSet.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>其中结果集的映射：RowMapper，这里写的接口，当使用的时候，使用匿名内部类操作</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">RowMapper</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    T <span class=\"title function_\">mapRow</span><span class=\"params\">(ResultSet resultSet)</span> <span class=\"keyword\">throws</span> Exception;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>用户面向对象编程，不写SQL，所以我们底层需要反射获取对象的参数，然后解析拼接为SQL</p>\n</blockquote>\n<p>这里我们将反射对象的通用操作封装</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseSQLBuilder</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String tableName; <span class=\"comment\">//表名</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String primaryKeyName; <span class=\"comment\">//主键名</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">SELECT</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">FROM</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; from &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">WHERE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; where &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">AND</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; and &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">IN</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; IN &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">UPDATE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; UPDATE &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">SET</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; SET &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">VALUES</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; VALUES &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">OR</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; OR &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">DELETE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; DELETE &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">INSERT</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; INSERT &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">INTO</span> <span class=\"operator\">=</span> <span class=\"string\">&quot; INTO &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">StringBuilder</span> <span class=\"variable\">sqlBuilder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getTableName</span><span class=\"params\">(Object obj)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">Table</span> <span class=\"variable\">table</span> <span class=\"operator\">=</span> obj.getClass().getAnnotation(Table.class);</span><br><span class=\"line\">        tableName = table.value();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.equals(tableName, <span class=\"string\">&quot;&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 全类名拆分</span></span><br><span class=\"line\">            tableName = StringUtil.getLastStr(obj.getClass().getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getPrimaryKey</span><span class=\"params\">(Field field)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">PrimaryKey</span> <span class=\"variable\">primaryKey</span> <span class=\"operator\">=</span> field.getAnnotation(PrimaryKey.class);</span><br><span class=\"line\">        primaryKeyName = primaryKey.value();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.equals(primaryKeyName, <span class=\"string\">&quot;&quot;</span>)) &#123;</span><br><span class=\"line\">            primaryKeyName = StringUtil.getLastStr(field.getClass().getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">boolean</span> <span class=\"title function_\">hasPrimaryKey</span><span class=\"params\">(Field field)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">PrimaryKey</span> <span class=\"variable\">primaryKey</span> <span class=\"operator\">=</span> field.getAnnotation(PrimaryKey.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> primaryKey != <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String <span class=\"title function_\">getField</span><span class=\"params\">(String fieldStr)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;get&quot;</span> + fieldStr.substring(<span class=\"number\">0</span>, <span class=\"number\">1</span>).toUpperCase() + fieldStr.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Field[] getFields(Object obj)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj.getClass().getDeclaredFields();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里我们只以查询为例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">QuerySQLBuilder</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseSQLBuilder</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">querySql</span><span class=\"params\">(Object t)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取操作表名</span></span><br><span class=\"line\">        getTableName(t);</span><br><span class=\"line\">        <span class=\"comment\">// SQL拼接</span></span><br><span class=\"line\">        sqlBuilder.append(SELECT + <span class=\"string\">&quot;*&quot;</span> + FROM).append(tableName).append(WHERE + <span class=\"string\">&quot; 1=1 &quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Field field : getFields(t)) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">fieldStr</span> <span class=\"operator\">=</span> StringUtil.getLastStr(field.toString());</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> t.getClass().getMethod(getField(fieldStr)).invoke(t);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"string\">&quot;&quot;</span>.equals(value) &amp;&amp; <span class=\"literal\">null</span> != value) &#123;</span><br><span class=\"line\">                sqlBuilder.append(AND).append(fieldStr).append(<span class=\"string\">&quot;=&quot;</span>).append(<span class=\"string\">&quot;&#x27;&quot;</span>).append(value).append(<span class=\"string\">&quot;&#x27;&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sqlBuilder.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>我们将QuerySQLBuilder。。。其他Builder封装到一个工厂类中，进行获取</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SQLBuilderInstanceFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">QuerySQLBuilder</span> <span class=\"variable\">queryBuilder</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">SaveSQLBuilder</span> <span class=\"variable\">saveBuilder</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">UpdateSQLBuilder</span> <span class=\"variable\">updateBuilder</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">DeleteSQLBuilder</span> <span class=\"variable\">deleteSQLBuilder</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> QuerySQLBuilder <span class=\"title function_\">getQueryBuilder</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (queryBuilder == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            queryBuilder = <span class=\"keyword\">new</span> <span class=\"title class_\">QuerySQLBuilder</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> queryBuilder;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SaveSQLBuilder <span class=\"title function_\">getSaveBuilder</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (saveBuilder == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            saveBuilder = <span class=\"keyword\">new</span> <span class=\"title class_\">SaveSQLBuilder</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> saveBuilder;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> UpdateSQLBuilder <span class=\"title function_\">getUpdateBuilder</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (updateBuilder == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            updateBuilder = <span class=\"keyword\">new</span> <span class=\"title class_\">UpdateSQLBuilder</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> updateBuilder;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> DeleteSQLBuilder <span class=\"title function_\">getDeleteSQLBuilder</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (deleteSQLBuilder == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            deleteSQLBuilder = <span class=\"keyword\">new</span> <span class=\"title class_\">DeleteSQLBuilder</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deleteSQLBuilder;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>定义查询接口</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IQuery</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    List&lt;T&gt; <span class=\"title function_\">query</span><span class=\"params\">(T t)</span> <span class=\"keyword\">throws</span> Exception;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查询具体实现类</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Query</span>&lt;T&gt; <span class=\"keyword\">extends</span> <span class=\"title class_\">JdbcTemplate</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IQuery</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;T&gt; <span class=\"title function_\">query</span><span class=\"params\">(T t)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 解析出的SQL</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> SQLBuilderInstanceFactory.getQueryBuilder().querySql(t);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;sql  &quot;</span>+sql);</span><br><span class=\"line\">        Field[] fields = t.getClass().getDeclaredFields();</span><br><span class=\"line\">        <span class=\"comment\">// 执行SQL</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> executeQuery(sql, <span class=\"keyword\">new</span> <span class=\"title class_\">RowMapper</span>&lt;T&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> T <span class=\"title function_\">mapRow</span><span class=\"params\">(ResultSet resultSet)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (Field field : fields) &#123;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">getField</span> <span class=\"operator\">=</span> StringUtil.getSetMethod(StringUtil.getLastStr(field.toString()));</span><br><span class=\"line\">                    <span class=\"type\">Object</span> <span class=\"variable\">object</span> <span class=\"operator\">=</span> resultSet.getObject(StringUtil.getLastStr(field.toString()), field.getType());</span><br><span class=\"line\">                    t.getClass().getMethod(getField,field.getType()).invoke(t,object);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> t;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>现在大体上的代码都已经实现了，我们测试一下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">        user.setAddress(<span class=\"string\">&quot;china&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 查询操作</span></span><br><span class=\"line\">        Query&lt;User&gt; userQuery = <span class=\"keyword\">new</span> <span class=\"title class_\">Query</span>&lt;&gt;();</span><br><span class=\"line\">        List&lt;User&gt; userList = userQuery.query(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以看到这期间用户在使用的过程中，没有写一句SQL，但可以正常操作数据库了。剩下的细节就等着我们去完善。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>​    本文中，我大概总结了一下，Java操作Mysql的演化过程，从最基本的JDBC到自动化的ORM操作，可以看到操作是越来越简单，也越来越灵活了，但底层大致的原理我们还是应该了解的。</p>\n<p>​    本文我参考了韩顺平老师的Mysql基础文章和小四的技术之旅文章。十分感谢！！！原作者的文章中的内容更加详细，具体可在网上查询。</p>\n<p>​    这里想推一下我的博客，虽然现在还很简陋，里面会分享我的学习所得，也希望能帮助到大家，<a href=\"http://1.14.74.242/\">http://1.14.74.242</a></p>\n","text":"从 JDBC 到 ORM（例：Mybatis）的演化过程​ 下面我将介绍Java操作Mysql数据的方式的演化过程，从最基本的JDBC到ORM框架的实现，每一次演化都是为了解决现有存在的问题。 JDBC这里需要加入Mysql驱动包或者依赖. 12345&lt;dependency...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"数据库","slug":"数据库","count":2,"path":"api/categories/数据库.json"}],"tags":[{"name":"jdbc","slug":"jdbc","count":1,"path":"api/tags/jdbc.json"},{"name":"orm","slug":"orm","count":1,"path":"api/tags/orm.json"},{"name":"mysql","slug":"mysql","count":1,"path":"api/tags/mysql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%8E-JDBC-%E5%88%B0-ORM%EF%BC%88%E4%BE%8B%EF%BC%9AMybatis%EF%BC%89%E7%9A%84%E6%BC%94%E5%8C%96%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">从 JDBC 到 ORM（例：Mybatis）的演化过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JDBC\"><span class=\"toc-text\">JDBC</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%81%E8%A3%85JDBC%E5%B7%A5%E5%85%B7%E7%B1%BB\"><span class=\"toc-text\">封装JDBC工具类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E8%BF%9E%E6%8E%A5%E6%B1%A0\"><span class=\"toc-text\">使用连接池</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Apache%E2%80%94DBUtils\"><span class=\"toc-text\">Apache—DBUtils</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DAO%E4%B8%8E%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E9%80%9A%E7%94%A8%E6%96%B9%E6%B3%95-BasicDao\"><span class=\"toc-text\">DAO与增删改查通用方法-BasicDao</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ORM\"><span class=\"toc-text\">ORM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA\"><span class=\"toc-text\">代码演示</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol>","author":{"name":"秦思成","slug":"blog-author","avatar":"https://tva2.sinaimg.cn/large/9bd9b167ly1fzjxy660fij20b40b43yi.jpg","link":"/","description":"我的个人知识库","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"反射复习","uid":"c18aa1916b90b67de06b43b022141dcc","slug":"Java/反射复习","date":"2022-12-03T02:57:12.000Z","updated":"2022-12-03T08:18:29.572Z","comments":true,"path":"api/articles/Java/反射复习.json","keywords":null,"cover":"/img/default_top_img.jpg","text":"反射复习能干嘛​ 当我们创建一个对象时，需要事先在源码中进行编写，例如：new Object(),但如果未来发生变化，我就不得不在源码中进行修改，这也违反了开闭原则，我们能不能仅修改配置文件就可以调整系统中需要创建的类。比如说我在配置文件写: 12classPathName=or...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"author":{"name":"秦思成","slug":"blog-author","avatar":"https://tva2.sinaimg.cn/large/9bd9b167ly1fzjxy660fij20b40b43yi.jpg","link":"/","description":"我的个人知识库","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"第二章：链表问题","uid":"d03f3e28d8ef9c66091c681cce2f6e52","slug":"数据结构/第二章：链表问题","date":"2022-11-28T05:03:04.000Z","updated":"2022-12-01T02:10:52.726Z","comments":true,"path":"api/articles/数据结构/第二章：链表问题.json","keywords":null,"cover":"/img/default_top_img.jpg","text":"第二章：链表问题打印两个有序链表的公共部分1234567891011121314151617181920/** * 给定两个有序链表的头指针head1和head2,打印两个链表的公共部分 * @param head1 * @param head2 */public static ...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":3,"path":"api/categories/数据结构.json"}],"tags":[{"name":"链表","slug":"链表","count":1,"path":"api/tags/链表.json"}],"author":{"name":"秦思成","slug":"blog-author","avatar":"https://tva2.sinaimg.cn/large/9bd9b167ly1fzjxy660fij20b40b43yi.jpg","link":"/","description":"我的个人知识库","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}